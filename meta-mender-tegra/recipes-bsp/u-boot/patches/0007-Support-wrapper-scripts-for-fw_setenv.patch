From 1c08a73ee241ccce0f419fa1243c9b3fd09a743d Mon Sep 17 00:00:00 2001
From: Dan Walkes <danwalkes@trellis-logic.com>
Date: Sat, 3 Aug 2019 17:07:01 -0600
Subject: [PATCH] Support wrapper scripts for fw_setenv

When u-boot enviroment is stored to a read-only boot partition, it
may be useful for a wrapper script to handle disabling read only status
around fw_setenv invocation. See the example script below:

```
echo 0 > /sys/block/mmcblk0boot1/force_ro
set -e
/sbin/fw_setenv_nounlock "$@"
set +e
echo 1 > /sys/block/mmcblk0boot1/force_ro
```

To allow this, use any invocation which starts with fw_setenv to invoke
the set environment function instead of requiring a name which exactly
matches fw_setenv.

Signed-off-by: Dan Walkes <danwalkes@trellis-logic.com>
---
 tools/env/fw_env_main.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/tools/env/fw_env_main.c b/tools/env/fw_env_main.c
index 443de36e43..8092636bb1 100644
--- a/tools/env/fw_env_main.c
+++ b/tools/env/fw_env_main.c
@@ -222,11 +222,11 @@ int main(int argc, char *argv[])
 
 	if (strcmp(_cmdname, CMD_PRINTENV) == 0) {
 		do_printenv = 1;
-	} else if (strcmp(_cmdname, CMD_SETENV) == 0) {
+	} else if (strstr(_cmdname, CMD_SETENV) == _cmdname) {
 		do_printenv = 0;
 	} else {
 		fprintf(stderr,
-			"Identity crisis - may be called as `%s' or as `%s' but not as `%s'\n",
+			"Identity crisis - may be called as `%s' or as `%sXXXX' but not as `%s'\n",
 			CMD_PRINTENV, CMD_SETENV, _cmdname);
 		exit(EXIT_FAILURE);
 	}
